{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["\"use strict\";\nvar $__0,\n    $__2,\n    $__4;\n$traceurRuntime.options.symbols = true;\nfunction getInputDirectory(argv) {\n  if (argv.input) {\n    return argv.input;\n  }\n  return '.';\n}\nfunction getOutputDirectory(argv) {\n  if (argv.output) {\n    return argv.output;\n  }\n  return 'traceur-output';\n}\nvar gulp = require('gulp'),\n    jasmine = require('gulp-jasmine'),\n    traceur = require('gulp-traceur'),\n    del = require('del'),\n    argv = require('yargs').argv,\n    inputDir = getInputDirectory(argv),\n    outputDir = getOutputDirectory(argv);\ngulp.task('default', ['test']);\ngulp.task('test', ['traceur', 'copy-runtime'], $traceurRuntime.initTailRecursiveFunction(function() {\n  return $traceurRuntime.call(function() {\n    return ($__0 = gulp.src([outputDir + '/*_test.spec.js']), $traceurRuntime.continuation($__0.pipe, $__0, [jasmine()]));\n  }, this, arguments);\n}));\ngulp.task('traceur', $traceurRuntime.initTailRecursiveFunction(function() {\n  return $traceurRuntime.call(function() {\n    return ($__2 = gulp.src([inputDir + '/*.js']).pipe(traceur({\n      modules: 'commonjs',\n      properTailCalls: true,\n      symbols: true,\n      annotations: true,\n      arrayComprehension: true,\n      asyncFunctions: true,\n      asyncGenerators: true,\n      exponentiation: true,\n      exportFromExtended: true,\n      forOn: true,\n      generatorComprehension: true,\n      memberVariables: true,\n      require: true,\n      types: true\n    })), $traceurRuntime.continuation($__2.pipe, $__2, [gulp.dest(outputDir)]));\n  }, this, arguments);\n}));\ngulp.task('copy-runtime', $traceurRuntime.initTailRecursiveFunction(function() {\n  return $traceurRuntime.call(function() {\n    return ($__4 = gulp.src(traceur.RUNTIME_PATH), $traceurRuntime.continuation($__4.pipe, $__4, [gulp.dest(outputDir)]));\n  }, this, arguments);\n}));\ngulp.task('clean', function(cb) {\n  del([outputDir], cb);\n});\n"]}